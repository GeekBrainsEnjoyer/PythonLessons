# # # # Задача №31. Решение в группах
# # # # Последовательностью Фибоначчи называется
# # # # последовательность чисел a, a1, ..., an, ..., где a0= 0, a = 1, a = ak-1 + ak-2 (k > 1).
# # # # Требуется найти N-е число Фибоначчи
# # # # Input: 7
# # # # Output: 21
# # # # Задание необходимо решать через рекурсию

# # # def fib(n):
# # #     if n in [1, 2]:
# # #         return 1
# # #     return fib(n - 1) + fib(n - 2)

# # # list1 = []
# # # n = int(input())
# # # for i in range(1, n + 1):
# # #    list1.append(fib(i))

# # # print(list1)

# # # Задача №33. Решение в группах
# # # Хакер Василий получил доступ к классному журналу и
# # # хочет заменить все свои минимальные оценки на
# # # максимальные. Напишите программу, которая
# # # заменяет оценки Василия, но наоборот: все
# # # максимальные – на минимальные.
# # # Input: 5 -> 1 3 3 3 4
# # # Output: 1 3 3 3 1

# # def hachker(array):
# #     maxValue = max(array)
# #     for i in range(len(array)):
# #         if array[i] == maxValue:
# #             array[i] = 1

# #     return array

# # print(hachker([1,3,3,3,4,2,4,1]))

# # Задача №35. Решение в группах
# # Напишите функцию, которая принимает одно число и
# # проверяет, является ли оно простым
# # Напоминание: Простое число - это число, которое
# # имеет 2 делителя: 1 и n(само число)
# # Input: 5
# # Output: yes

# def simpleNum(n):
#     check = 0
#     for i in range(n - 1):
#         if n % (i+1) == 0:
#             check += 1

#     if check > 1:
#         return 'no'
#     else:
#         return 'yes'


# print(simpleNum(19))

# Задача №37. Решение в группах
# 15 минут
# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3


def reversMass(N):

    if N > 0:
        num = input()
        print(num, reversMass(N - 1))
        return ""
    return ""


N = int(input())
reversMass(N)
